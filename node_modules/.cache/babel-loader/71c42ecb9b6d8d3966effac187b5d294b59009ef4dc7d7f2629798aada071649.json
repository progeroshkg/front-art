{"ast":null,"code":"import axios from 'axios'; // Импорт Axios\n\nexport default {\n  data() {\n    return {\n      prefix: '',\n      // Префикс кода\n      codeLength: 6,\n      // Длина кода по умолчанию\n      generatedCode: '',\n      // Сгенерированный код\n      generatedToken: '',\n      // Сгенерированный токен\n      accessToken: ''\n    };\n  },\n  methods: {\n    async generateCode() {\n      try {\n        this.accessToken = window.localStorage.getItem('token');\n        const response = await axios.get('https://backend.neteniti.ru/api/generate-token', {\n          headers: {\n            'Authorization': `Bearer ${this.accessToken}`\n          }\n        });\n        const {\n          token\n        } = response.data;\n        this.generatedToken = token; // Store generated token\n\n        console.log('Access token:', this.accessToken);\n        console.log('Generated token:', this.generatedToken);\n\n        // Further actions after receiving the token\n      } catch (error) {\n        console.error('Ошибка при генерации кода:', error);\n      }\n    },\n    copyToClipboard() {\n      navigator.clipboard.writeText(this.generatedCode).then(() => {\n        alert('Код скопирован в буфер обмена');\n      }).catch(err => {\n        console.error('Ошибка копирования кода:', err);\n      });\n    },\n    copyTokenToClipboard() {\n      navigator.clipboard.writeText(this.generatedToken).then(() => {\n        alert('Токен скопирован в буфер обмена');\n      }).catch(err => {\n        console.error('Ошибка копирования токена:', err);\n      });\n    },\n    logout() {\n      window.localStorage.removeItem('token');\n      // Здесь можно добавить действия по выходу, например, редирект на страницу логина\n    }\n  }\n};","map":{"version":3,"names":["axios","data","prefix","codeLength","generatedCode","generatedToken","accessToken","methods","generateCode","window","localStorage","getItem","response","get","headers","token","console","log","error","copyToClipboard","navigator","clipboard","writeText","then","alert","catch","err","copyTokenToClipboard","logout","removeItem"],"sources":["src/views/AdminPanelTest.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-panel\">\r\n    <h1>Генератор кода</h1>\r\n    <div class=\"code-generator\">\r\n      <button @click=\"generateCode\" class=\"generate-button\">Сгенерировать код</button>\r\n    </div>\r\n\r\n    <div v-if=\"generatedCode\" class=\"generated-code\">\r\n      <h2>Сгенерированный код:</h2>\r\n      <textarea readonly v-model=\"generatedCode\" class=\"generated-code-textarea\"></textarea>\r\n      <button @click=\"copyToClipboard\" class=\"copy-button\">Скопировать код</button>\r\n    </div>\r\n\r\n    <div v-if=\"generatedToken\" class=\"generated-token\">\r\n      <h2>Сгенерированный токен:</h2>\r\n      <textarea readonly v-model=\"generatedToken\" class=\"generated-token-textarea\"></textarea>\r\n      <button @click=\"copyTokenToClipboard\" class=\"copy-button\">Скопировать токен</button>\r\n    </div>\r\n\r\n    <button @click=\"logout\" class=\"logout-button\">Выход</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'; // Импорт Axios\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      prefix: '', // Префикс кода\r\n      codeLength: 6, // Длина кода по умолчанию\r\n      generatedCode: '', // Сгенерированный код\r\n      generatedToken: '', // Сгенерированный токен\r\n      accessToken: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async generateCode() {\r\n      try {\r\n        this.accessToken = window.localStorage.getItem('token');\r\n        const response = await axios.get('https://backend.neteniti.ru/api/generate-token', {\r\n          headers: { 'Authorization': `Bearer ${this.accessToken}` }\r\n        });\r\n\r\n        const { token } = response.data;\r\n        this.generatedToken = token; // Store generated token\r\n\r\n        console.log('Access token:', this.accessToken);\r\n        console.log('Generated token:', this.generatedToken);\r\n\r\n        // Further actions after receiving the token\r\n      } catch (error) {\r\n        console.error('Ошибка при генерации кода:', error);\r\n      }\r\n    },\r\n    copyToClipboard() {\r\n      navigator.clipboard.writeText(this.generatedCode).then(() => {\r\n        alert('Код скопирован в буфер обмена');\r\n      }).catch(err => {\r\n        console.error('Ошибка копирования кода:', err);\r\n      });\r\n    },\r\n    copyTokenToClipboard() {\r\n      navigator.clipboard.writeText(this.generatedToken).then(() => {\r\n        alert('Токен скопирован в буфер обмена');\r\n      }).catch(err => {\r\n        console.error('Ошибка копирования токена:', err);\r\n      });\r\n    },\r\n    logout() {\r\n      window.localStorage.removeItem('token');\r\n      // Здесь можно добавить действия по выходу, например, редирект на страницу логина\r\n    }\r\n  }\r\n}\r\n</script>\r\n  \r\n    <style>\r\n    .admin-panel {\r\n      max-width: 400px;\r\n      margin: 50px auto;\r\n      padding: 20px;\r\n      background-color: #f7f7f7; /* Цвет фона */\r\n      border-radius: 8px;\r\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Тень */\r\n      text-align: center;\r\n    }\r\n    \r\n    .admin-panel h1 {\r\n      margin-bottom: 30px;\r\n      color: #333; /* Цвет текста */\r\n    }\r\n    \r\n    .code-generator {\r\n      margin-bottom: 20px;\r\n    }\r\n  \r\n    .copy-button {\r\n    padding: 12px 24px;\r\n    background-color: #007bff; /* Цвет фона кнопки */\r\n    color: #fff; /* Цвет текста */\r\n    border: none;\r\n    border-radius: 6px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n    margin-top: 10px; /* Добавляем немного отступа сверху */\r\n  }\r\n  \r\n  .copy-button:hover {\r\n    background-color: #0056b3; /* Измененный цвет фона при наведении */\r\n  }\r\n    \r\n    .code-generator label {\r\n      display: block;\r\n      margin-bottom: 10px;\r\n      font-weight: bold;\r\n      color: #555; /* Цвет текста */\r\n    }\r\n    \r\n    .input-field {\r\n      width: 100%;\r\n      padding: 12px;\r\n      margin-bottom: 20px;\r\n      border: 1px solid #ddd; /* Цвет границы */\r\n      border-radius: 6px;\r\n      font-size: 16px;\r\n    }\r\n    \r\n    .generate-button {\r\n      padding: 12px 24px;\r\n      background-color: #007bff; /* Цвет фона кнопки */\r\n      color: #fff; /* Цвет текста */\r\n      border: none;\r\n      border-radius: 6px;\r\n      font-size: 16px;\r\n      cursor: pointer;\r\n      transition: background-color 0.3s ease;\r\n    }\r\n    \r\n    .generate-button:hover {\r\n      background-color: #0056b3; /* Измененный цвет фона при наведении */\r\n    }\r\n    \r\n    .generated-code h2 {\r\n      margin-bottom: 15px;\r\n      color: #555; /* Цвет текста */\r\n    }\r\n    \r\n    .generated-code-textarea {\r\n      width: 100%;\r\n      height: 100px;\r\n      padding: 12px;\r\n      margin-bottom: 20px;\r\n      border: 1px solid #ddd; /* Цвет границы */\r\n      border-radius: 6px;\r\n      font-size: 16px;\r\n      resize: none;\r\n    }\r\n    \r\n    .logout-button {\r\n      padding: 12px 24px;\r\n      background-color: #ff4d4d; /* Цвет фона кнопки */\r\n      color: #fff; /* Цвет текста */\r\n      border: none;\r\n      border-radius: 6px;\r\n      font-size: 16px;\r\n      cursor: pointer;\r\n      transition: background-color 0.3s ease;\r\n    }\r\n    \r\n    .logout-button:hover {\r\n      background-color: #e60000; /* Измененный цвет фона при наведении */\r\n    }\r\n    </style>\r\n    "],"mappings":"AAwBA,OAAAA,KAAA;;AAEA;EACAC,KAAA;IACA;MACAC,MAAA;MAAA;MACAC,UAAA;MAAA;MACAC,aAAA;MAAA;MACAC,cAAA;MAAA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,aAAA;MACA;QACA,KAAAF,WAAA,GAAAG,MAAA,CAAAC,YAAA,CAAAC,OAAA;QACA,MAAAC,QAAA,SAAAZ,KAAA,CAAAa,GAAA;UACAC,OAAA;YAAA,gCAAAR,WAAA;UAAA;QACA;QAEA;UAAAS;QAAA,IAAAH,QAAA,CAAAX,IAAA;QACA,KAAAI,cAAA,GAAAU,KAAA;;QAEAC,OAAA,CAAAC,GAAA,uBAAAX,WAAA;QACAU,OAAA,CAAAC,GAAA,0BAAAZ,cAAA;;QAEA;MACA,SAAAa,KAAA;QACAF,OAAA,CAAAE,KAAA,+BAAAA,KAAA;MACA;IACA;IACAC,gBAAA;MACAC,SAAA,CAAAC,SAAA,CAAAC,SAAA,MAAAlB,aAAA,EAAAmB,IAAA;QACAC,KAAA;MACA,GAAAC,KAAA,CAAAC,GAAA;QACAV,OAAA,CAAAE,KAAA,6BAAAQ,GAAA;MACA;IACA;IACAC,qBAAA;MACAP,SAAA,CAAAC,SAAA,CAAAC,SAAA,MAAAjB,cAAA,EAAAkB,IAAA;QACAC,KAAA;MACA,GAAAC,KAAA,CAAAC,GAAA;QACAV,OAAA,CAAAE,KAAA,+BAAAQ,GAAA;MACA;IACA;IACAE,OAAA;MACAnB,MAAA,CAAAC,YAAA,CAAAmB,UAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}