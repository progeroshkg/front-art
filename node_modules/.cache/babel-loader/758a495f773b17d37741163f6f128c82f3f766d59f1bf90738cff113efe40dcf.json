{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport RangeSlider from 'vue-range-slider';\n// you probably need to import built-in style\nimport { toBlob } from 'html-to-image';\nimport validator from 'validator';\n\n// function createBase64Image(fileObject) {\n//     const reader = new FileReader();\n\n//     reader.onload = (e) => {\n//       // return e.target.result\n//       // this.finishedImage = e.target.result;\n//       console.log(e.target.result,8888)\n//       // this.uploadImage();\n//     };\n//     reader.readAsDataURL(fileObject);\n//   }\n\nexport default {\n  name: 'GenerateView',\n  data: () => ({\n    step: 0,\n    sliderValue: 50,\n    file: null,\n    image: null,\n    imageType: 1,\n    // 1 = square 2 = circle\n    ctx: null,\n    canvasWidth: 300,\n    canvasHeight: 300,\n    scale: 10,\n    turn: 0,\n    brightness: 50,\n    contrast: 50,\n    thread: 4.5,\n    email: '',\n    // Добавляем переменную для хранения email\n    test: '',\n    finishedImage: '',\n    errorMessage: '',\n    successMessage: '',\n    finUrl: ''\n  }),\n  methods: {\n    validateEmail(email) {\n      console.log(email);\n      if (validator.isEmail(email)) {\n        this.successMessage = 'Email is valid!';\n        this.errorMessage = '';\n      } else {\n        this.errorMessage = 'Электронная почта недействительна. Пожалуйста, введите действительный адрес электронной почты..';\n        this.successMessage = '';\n      }\n    },\n    goToStep(stepNumber) {\n      this.step = stepNumber;\n      if (stepNumber === 2) {\n        const node1 = document.getElementById('firstImageResult');\n        node1.style.border = 'none';\n        toBlob(node1).then(dataUrl1 => {\n          // Use an arrow function here\n\n          node1.style.border = '1px solid #25E477';\n          this.createBase64Image(dataUrl1);\n        }).catch(error => {\n          // Use an arrow function here\n          node1.style.border = '1px solid #25E477';\n          console.error('Oops, something went wrong!', error);\n        });\n      }\n    },\n    createBase64Image(fileObject) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.finishedImage = e.target.result;\n      };\n      reader.readAsDataURL(fileObject);\n    },\n    saveImage() {\n      const node = document.getElementById('lastImageResult');\n      node.style.border = 'none';\n      toBlob(node).then(function (dataUrl) {\n        const blobUrl = URL.createObjectURL(dataUrl);\n        const link = document.createElement(\"a\"); // Or maybe get it from the current document\n        link.setAttribute('id', 'lastImageResultDownload');\n        link.href = blobUrl;\n        link.download = \"image.png\";\n        document.body.appendChild(link); // Or append it wherever you want\n        document.getElementById('lastImageResultDownload').click();\n        node.style.border = '1px solid #25E477';\n      }).catch(function (error) {\n        node.style.border = '1px solid #25E477';\n        console.error('oops, something went wrong!', error);\n      });\n    },\n    uploadFile() {\n      const filesSelected = this.$refs.file.files;\n      const t = this;\n      if (filesSelected.length > 0) {\n        let fileToLoad = filesSelected[0];\n        let fileReader = new FileReader();\n        fileReader.onload = function (fileLoadedEvent) {\n          let srcData = fileLoadedEvent.target.result; // <--- data: base64\n          t.file = srcData;\n        };\n        fileReader.readAsDataURL(fileToLoad);\n      }\n    },\n    uploadImageToCanvas() {\n      this.image = this.file;\n    },\n    // Функция для отправки данных на сервер\n    async sendDataToBackend() {\n      try {\n        this.email = document.getElementById('email').value;\n        this.validateEmail(this.email);\n\n        // console.log(this.finishedImage, 888)\n\n        const data = {\n          email: this.email,\n          image: this.image,\n          generated_image: this.finishedImage\n        };\n\n        // Отправляем данные на сервер\n        const response = await fetch('http://backend.neteniti.ru/api/send-form', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        });\n\n        // Получаем ответ от сервера\n        const responseData = await response.json();\n        console.log(responseData); // Выводим ответ в консоль\n        this.successMessage = 'Почта успешна отправлено';\n      } catch (error) {\n        this.errorMessage = 'An error occurred during validation.';\n        console.error('Ошибка:', error);\n      }\n    }\n\n    // Функция для преобразования изображения в формат base64\n    // imageToBase64(file) {\n    //     return new Promise((resolve, reject) => {\n    //         var reader = new FileReader();\n    //         reader.readAsDataURL(file);\n    //         reader.onload = () => {\n    //             resolve(reader.result);\n    //         };\n    //         reader.onerror = (error) => {\n    //             reject(error);\n    //         };\n    //     });\n    // }\n  },\n  watch: {},\n  mounted() {},\n  components: {\n    RangeSlider\n  }\n};","map":{"version":3,"names":["RangeSlider","toBlob","validator","name","data","step","sliderValue","file","image","imageType","ctx","canvasWidth","canvasHeight","scale","turn","brightness","contrast","thread","email","test","finishedImage","errorMessage","successMessage","finUrl","methods","validateEmail","console","log","isEmail","goToStep","stepNumber","node1","document","getElementById","style","border","then","dataUrl1","createBase64Image","catch","error","fileObject","reader","FileReader","onload","e","target","result","readAsDataURL","saveImage","node","dataUrl","blobUrl","URL","createObjectURL","link","createElement","setAttribute","href","download","body","appendChild","click","uploadFile","filesSelected","$refs","files","t","length","fileToLoad","fileReader","fileLoadedEvent","srcData","uploadImageToCanvas","sendDataToBackend","value","generated_image","response","fetch","method","headers","JSON","stringify","responseData","json","watch","mounted","components"],"sources":["src/views/GenerateView.vue"],"sourcesContent":["<template>\n  <div>\n    <header class=\"Menu\">\n      <ul>\n        <li><a href=\"#generator\">Генератор String Art</a></li>\n        <li><router-link :to=\"{ name: 'UserProfile' }\">Помощник String Art</router-link></li>\n        <li><a href=\"#contacts\">Контакты</a></li>\n      </ul>\n    </header>\n\n    <div class=\"generate\">\n\n      <!-- ШАГ 1 -->\n      <div class=\"step step-0\">\n        <div class=\"step-title\">ШАГ 1</div>\n        <div class=\"step-label\">Выберите форму картины</div>\n        <div class=\"step-types\">\n          <div @click=\"imageType = 1\" class=\"step-types-square\">\n            <svg v-if=\"imageType === 1\" width=\"68\" height=\"50\" viewBox=\"0 0 68 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M67.0042 1.02678C65.6765 -0.301081 63.5238 -0.301081 62.1958 1.02678L21.4617 41.7613L5.80418 26.1038C4.47645 24.7759 2.32383 24.776 0.995833 26.1038C-0.332026 27.4315 -0.332026 29.5841 0.995833 30.912L19.0575 48.9734C20.3849 50.3011 22.5391 50.3002 23.8659 48.9734L67.0042 5.83512C68.332 4.50739 68.3319 2.35464 67.0042 1.02678Z\" fill=\"#25E477\"/>\n            </svg>\n          </div>\n          <div @click=\"imageType = 2\" class=\"step-types-circle\">\n            <svg v-if=\"imageType === 2\" width=\"68\" height=\"50\" viewBox=\"0 0 68 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M67.0042 1.02678C65.6765 -0.301081 63.5238 -0.301081 62.1958 1.02678L21.4617 41.7613L5.80418 26.1038C4.47645 24.7759 2.32383 24.776 0.995833 26.1038C-0.332026 27.4315 -0.332026 29.5841 0.995833 30.912L19.0575 48.9734C20.3849 50.3011 22.5391 50.3002 23.8659 48.9734L67.0042 5.83512C68.332 4.50739 68.3319 2.35464 67.0042 1.02678Z\" fill=\"#25E477\"/>\n            </svg>\n          </div>\n        </div>\n        <div class=\"step-file\">\n          <label for=\"file\" class=\"step-file-choose\">\n            <input ref=\"file\" @change=\"uploadFile\" type=\"file\" id=\"file\">\n             {{ file ? 'Файл выбран' : 'Выберите файл' }}\n          </label>\n          <button @click=\"uploadImageToCanvas\" class=\"step-file-upload\">Загрузить</button>\n        </div>\n        <div class=\"step-image\">\n          <div class=\"step-image-container\" :class=\"{'step-image-container-square': imageType === 1}\">\n            <img :src=\"image\" :style=\"{\n              transform: `scale(${scale / 10}) rotate(${turn}deg)`,\n              }\" alt=\"\">\n          </div>\n        </div>\n        <div class=\"step-scale\">\n          <span class=\"step-scale-title\">Масштаб</span>\n          <range-slider class=\"slider\" min=\"1\" max=\"100\" step=\"0.2\" v-model=\"scale\"></range-slider>\n        </div>\n        <div class=\"step-turn\">\n          <span class=\"step-turn-title\">Поворот</span>\n          <range-slider class=\"slider\" min=\"0\" max=\"360\" step=\"1\" v-model=\"turn\"></range-slider>\n        </div>\n        <div class=\"step-last\">\n          <button @click=\"step = 1\">К шагу 2</button>\n        </div>\n      </div>\n\n      <!-- ШАГ 2 -->\n      <div class=\"step step-1\" v-if=\"step === 1\">\n        <div class=\"step-title\">ШАГ 2</div>\n        <div class=\"step-image\">\n          <div class=\"step-image-container\" id=\"firstImageResult\" :class=\"{'step-image-container-square': imageType === 1}\">\n            <img :src=\"image\" :style=\"{\n              transform: `scale(${scale / 10}) rotate(${turn}deg)`,\n              filter: `grayscale(1) brightness(${brightness}%) contrast(${contrast}%)`\n              }\" alt=\"\">\n          </div>\n        </div>\n        <div class=\"step-scale\">\n          <span class=\"step-scale-title\">Яркость: {{brightness}}%</span>\n          <range-slider class=\"slider\" min=\"10\" max=\"180\" step=\"1\" v-model=\"brightness\"></range-slider>\n        </div>\n        <div class=\"step-turn\">\n          <span class=\"step-turn-title\">Контраст: {{contrast}}%</span>\n          <range-slider class=\"slider\" min=\"10\" max=\"180\" step=\"1\" v-model=\"contrast\"></range-slider>\n        </div>\n        <div class=\"step-turn\">\n          <span class=\"step-turn-title\">Разброс нитей: {{thread}}</span>\n          <range-slider class=\"slider\" min=\"1\" max=\"20\" step=\"0.2\" v-model=\"thread\"></range-slider>\n        </div>\n        <div class=\"step-last\">\n          <button @click=\"goToStep(2)\">К шагу 3</button>\n        </div>\n      </div>\n\n      <!-- ШАГ 3 -->\n      <div class=\"step step-2\" v-if=\"step === 2\">\n        <div class=\"step-title\">ШАГ 3</div>\n        <div class=\"step-image\">\n          <div id=\"lastImageResult\" class=\"step-image-container\" :class=\"{'step-image-container-square': imageType === 1}\">\n            <img id=\"finishedImage\" :src=\"image\" :style=\"{\n              transform: `scale(${scale / 10}) rotate(${turn}deg)`,\n              filter: `grayscale(1) brightness(${brightness}%) contrast(${contrast}%)`\n              }\" alt=\"\">\n          </div>\n        </div>\n        <div class=\"step-generate\">Сгенерировать изображение</div>\n        <div class=\"step-btns\">\n          <div @click=\"saveImage\" class=\"step-btns-save\">Сохранить изображение</div>\n          <div @click=\"goToStep(3)\" class=\"step-btns-instructions\">Инструкция</div>\n        </div>\n      </div>\n\n      <!-- ИНСТРУКЦИЯ -->\n      <div class=\"step step-3\" v-if=\"step === 3\">\n        <div class=\"step-title\">ИНСТРУКЦИЯ</div>\n        <div class=\"step-instructions-container\">\n          Ваша инструкция по сборке готова! Укажите Вашу почту.\n        </div>\n        <input type=\"email\" class=\"step-email\" placeholder=\"ТВОЙ E-MAIL\">\n        <button class=\"step-send-email\" @click=\"sendDataToBackend\">Отправить почту</button>\n        \n        <p v-if=\"errorMessage\" class=\"error text-danger\">{{ errorMessage }}</p>\n        <p v-if=\"successMessage\" class=\"success\">{{ successMessage }}</p>\n        <div class=\"step-help-container\">\n          При возникновении проблем просьба связаться через контактную форму. просьба связаться через почту <router-link to=\"/\">почта@gmail.com</router-link><br>\n          Для упрощения изготовления картины вы можете воспользоваться нашим \n          <router-link to=\"/\">помощником стринг арта</router-link>, в который загружается файл с инструкцией который вам придет на почту, которую вы указали.\n          <div class=\"social-media-container\">\n            <a href=\"https://vk.com/nitiniti_art\" target=\"_blank\" class=\"social-media-icon vk-icon\"></a>\n            <a href=\"https://www.instagram.com/nete.niti?igsh=N2Fub2k1ZmphbHRs\" target=\"_blank\" class=\"social-media-icon instagram-icon\"></a>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport RangeSlider from 'vue-range-slider'\n// you probably need to import built-in style\nimport { toBlob } from 'html-to-image';\nimport validator from 'validator';\n\n  // function createBase64Image(fileObject) {\n  //     const reader = new FileReader();\n\n  //     reader.onload = (e) => {\n  //       // return e.target.result\n  //       // this.finishedImage = e.target.result;\n  //       console.log(e.target.result,8888)\n  //       // this.uploadImage();\n  //     };\n  //     reader.readAsDataURL(fileObject);\n  //   }\n\n\nexport default {\n  name: 'GenerateView',\n  data: () => ({\n    step: 0,\n    sliderValue: 50,\n    file: null,\n    image: null,\n    imageType: 1, // 1 = square 2 = circle\n    ctx: null,\n    canvasWidth: 300,\n    canvasHeight: 300,\n    scale: 10,\n    turn: 0,\n    brightness: 50,\n    contrast: 50,\n    thread: 4.5,\n    email: '', // Добавляем переменную для хранения email\n    test: '',\n    finishedImage: '',\n    errorMessage: '',\n    successMessage: '',\n    finUrl: ''\n\n  }),\n  methods: {\n    validateEmail(email) {\n      console.log(email)\n      if (validator.isEmail(email)) {\n        this.successMessage = 'Email is valid!';\n        this.errorMessage = '';\n      } else {\n        this.errorMessage = 'Электронная почта недействительна. Пожалуйста, введите действительный адрес электронной почты..';\n        this.successMessage = '';\n      }\n    },\n    \n    goToStep(stepNumber) {\n      this.step = stepNumber;\n\n      if (stepNumber === 2) {\n        const node1 = document.getElementById('firstImageResult');\n     \n        node1.style.border = 'none'\n        toBlob(node1)\n          .then((dataUrl1) => { // Use an arrow function here\n          \n          node1.style.border = '1px solid #25E477'\n          this.createBase64Image(dataUrl1)\n        })\n        .catch((error) => { // Use an arrow function here\n          node1.style.border = '1px solid #25E477';\n          console.error('Oops, something went wrong!', error);\n        });\n      }\n    },\n       \n    createBase64Image(fileObject) {\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n        this.finishedImage = e.target.result;       \n      };\n      reader.readAsDataURL(fileObject);\n    },\n\n    saveImage() {\n      const node = document.getElementById('lastImageResult');\n      node.style.border = 'none'\n      toBlob(node)\n        .then(function (dataUrl) {\n            const blobUrl = URL.createObjectURL(dataUrl);\n            const link = document.createElement(\"a\"); // Or maybe get it from the current document\n            link.setAttribute('id', 'lastImageResultDownload')\n                      \n            link.href = blobUrl;\n            link.download = \"image.png\";\n            document.body.appendChild(link); // Or append it wherever you want\n            document.getElementById('lastImageResultDownload').click() \n            node.style.border = '1px solid #25E477'\n        })\n        .catch(function (error) {\n          node.style.border = '1px solid #25E477'\n          console.error('oops, something went wrong!', error);\n        });\n    },\n\n    uploadFile() {\n        const filesSelected = this.$refs.file.files\n        const t = this\n        if (filesSelected.length > 0) {\n          let fileToLoad = filesSelected[0];\n          let fileReader = new FileReader();\n          fileReader.onload = function(fileLoadedEvent) {\n            let srcData = fileLoadedEvent.target.result; // <--- data: base64\n            t.file = srcData\n          }\n          fileReader.readAsDataURL(fileToLoad);\n        }\n    },\n    \n    uploadImageToCanvas() {\n      this.image = this.file\n    },\n    \n    // Функция для отправки данных на сервер\n    async sendDataToBackend() {\n        try {\n     \n          this.email = document.getElementById('email').value;           \n          this.validateEmail(this.email)\n\n          // console.log(this.finishedImage, 888)\n          \n            const data = {\n                email: this.email,\n                image: this.image,\n                generated_image: this.finishedImage\n            };\n\n            // Отправляем данные на сервер\n            const response = await fetch('http://backend.neteniti.ru/api/send-form', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            });\n\n            // Получаем ответ от сервера\n            const responseData = await response.json();\n            console.log(responseData); // Выводим ответ в консоль\n             this.successMessage = 'Почта успешна отправлено';\n        } catch (error) {\n\n         this.errorMessage = 'An error occurred during validation.';\n            console.error('Ошибка:', error);\n        \n        }\n    },\n\n    // Функция для преобразования изображения в формат base64\n    // imageToBase64(file) {\n    //     return new Promise((resolve, reject) => {\n    //         var reader = new FileReader();\n    //         reader.readAsDataURL(file);\n    //         reader.onload = () => {\n    //             resolve(reader.result);\n    //         };\n    //         reader.onerror = (error) => {\n    //             reject(error);\n    //         };\n    //     });\n    // }\n  },\n  \n  watch: {},\n  mounted() {},\n  components: {\n    RangeSlider\n  }\n}\n</script>\n\n\n\n<style lang=\"scss\" scoped>\n$green: #25E477;\n$dark-green: #154645;\n$white: #E3ECEC;\n\n@import 'vue-range-slider/dist/vue-range-slider.css';\n\n.generate {\n  width: 35%;\n  min-height: calc(100vh - 45px); /* Учитываем отступ сверху */\n  background: $dark-green;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  border-radius: 20px;\n  margin: auto;\n  margin-top: 45px;\n}\n\n/* Стили для мобильных устройств */\n@media (max-device-width: 768px) {\n  .generate {\n    width: 90%; /* Изменяем ширину на 90% для мобильных устройств */\n    margin-top: 10px; /* Сбрасываем отступ сверху */\n    border-radius: 0; /* Сбрасываем скругление углов */\n    min-height: 100vh; /* Изменяем высоту на 100vh для мобильных устройств */\n  }\n}\n\n.step {\n  padding: 20px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  &-instructions-container {\n    padding: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    border: 1px solid $green;\n    color: $white;\n    font-size: 20px;\n    border-radius: 10px;\n  }\n\n  &-help-container {\n    padding: 20px;\n    border: 1px solid $green;\n    color: $white;\n    font-size: 20px;\n    border-radius: 10px;\n\n    a {\n      color: $green;\n      text-decoration: none;\n    }\n  }\n\n  &-email {\n    margin-top: 20px;\n    background: #fff;\n    border-radius: 15px;\n    width: 100%;\n    height: 40px;\n    text-align: center;\n    padding: 10px;\n    font-style: normal; \n    color: $dark-green;\n    font-family: 'Arial Regular';\n    outline: none;\n    border: none;\n  }\n\n  &-send-email {\n    margin-bottom: 20px;\n    border-radius: 10px;\n    background: $green;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: $dark-green;\n    font-style: normal;\n    text-align: center;\n    height: 40px;\n    outline: none;\n    border: none;\n    font-family: 'Arial Regular';\n  }\n\n  .social-media-container {\n    text-align: center;\n    margin-top: 20px;\n  }\n\n  .social-media-icon {\n    display: inline-block;\n    width: 30px;\n    height: 30px;\n    margin-right: 10px;\n    background-size: contain;\n    background-repeat: no-repeat;\n  }\n\n  .vk-icon {\n    background-image: url('https://img.icons8.com/?size=100&id=13977&format=png&color=000000');\n  }\n\n  .instagram-icon {\n    background-image: url('https://img.icons8.com/?size=100&id=Xy10Jcu1L2Su&format=png&color=000000');\n  }\n\n  &-title {\n    font-size: 32px;\n    font-family: 'Arial Regular';\n    color: $green;\n  }\n\n  &-label {\n    height: 40px;\n    text-align: center;\n    border-radius: 30px;\n    border: 1px solid $green;\n    color: $white;\n    font-size: 22px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  &-types {\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n\n    & > div {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    &-square {\n      width: 100px;\n      height: 100px;\n      border: 1px solid $green;\n    }\n\n    &-circle {\n      width: 100px;\n      height: 100px;\n      border-radius: 100%;\n      border: 1px solid $green;\n    }\n  }\n\n  &-file {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    &-choose {\n      width: 187px;\n      height: 40px;\n      background: $green;\n      color: $dark-green;\n      border-radius: 10px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      input {\n        display: none;\n      }\n    }\n\n    &-upload {\n      width: 187px;\n      height: 40px;\n      border-radius: 10px;\n      border: 1px solid $green;\n      background: $dark-green;\n      color: $green;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  &-image {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &-container {\n      width: 350px;\n      height: 350px;\n      overflow: hidden;\n      border: 1px solid $green;\n      border-radius: 100%;\n      background: $white;\n    }\n\n    img {\n      width: 350px;\n      height: 350px;\n    }\n  }\n\n  &-image {\n    &-container-square {\n      border-radius: 0%;\n    }\n  }\n\n  &-scale {\n    gap: 20px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 20px;\n\n    &-title {\n      padding: 10px 15px;\n      border-radius: 30px;\n      color: $white;\n      border: 1px solid $green;\n    }\n  }\n\n  &-turn {\n    gap: 20px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 20px;\n\n    &-title {\n      padding: 10px 15px;\n      border-radius: 30px;\n      color: $white;\n      border: 1px solid $green;\n    }\n  }\n\n  &-last {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n\n    button {\n      width: 139px;\n      height: 40px;\n      background: $green;\n      color: $dark-green;\n      border-radius: 10px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      outline: none;\n      border: none;\n    }\n  }\n\n  &-generate {\n    border-radius: 10px;\n    color: $white;\n    border: 1px solid $green;\n    font-size: 20px;\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 40px;\n  }\n\n  &-btns {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 20px;\n\n    &-instructions {\n      height: 40px;\n      border-radius: 10px;\n      border: 1px solid $green;\n      background: $dark-green;\n      color: $green;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-grow: 6;\n    }\n\n    &-save {\n      height: 40px;\n      background: $green;\n      color: $dark-green;\n      border-radius: 10px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      outline: none;\n      border: none;\n      flex-grow: 4;\n    }\n  }\n}\n\n.Menu {\n  text-align: center; /* Центрируем содержимое меню */\n  background-color: $dark-green; /* Темно-зеленый фон */\n  padding: 10px 0; /* Добавляем немного отступа сверху и снизу для улучшенного визуального восприятия */\n}\n\n.Menu li {\n  display: inline-block; /* Размещаем пункты меню в одной строке */\n  margin-right: 20px; /* Отступ между пунктами меню */\n}\n\n.Menu li:last-child {\n  margin-right: 0; /* Убираем отступ справа у последнего пункта меню */\n}\n\n.Menu a {\n  color: white; /* Белый цвет текста для ссылок */\n  text-decoration: none; /* Убираем подчеркивание для ссылок */\n  font-weight: bold; /* Жирный шрифт для ссылок */\n  padding: 5px 10px; /* Добавляем отступы для улучшенного визуального восприятия */\n  border-radius: 5px; /* Закругляем углы */\n}\n\n.Menu a:hover {\n  background-color: #238b5d; /* Изменяем фон при наведении на ссылку */\n}\n\n.container1 {\n  margin-top: 40px;\n  border-bottom: 15px;\n  justify-content: center;\n  text-align: center;\n  background-color: #033837;\n  padding: 20px;\n  border-radius: 15px 15px 25px 25px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  max-width: 400px;\n  width: 50%;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.instruction-box1 {\n  text-align: center;\n  color: white;\n}\n\n.instruction-box1 h1 {\n  margin-bottom: 20px;\n  font-size: 24px;\n}\n\n.email-section {\n  margin-bottom: 20px;\n}\n\n.email-section p {\n  margin-bottom: 10px;\n}\n\n.email-section input {\n  width: calc(100% - 20px);\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  margin-bottom: 10px;\n}\n\n.email-section button {\n  width: 100%;\n  padding: 10px;\n  background-color: #3b9e3b;\n  border: none;\n  border-radius: 5px;\n  color: white;\n  cursor: pointer;\n}\n\n.email-section button:hover {\n  background-color: #2e8c2e;\n}\n\n.support-section p {\n  margin: 10px 0;\n}\n\n.support-section a {\n  color: #25e477;\n  text-decoration: none;\n}\n\n.support-section .social-icons {\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n}\n\n.support-section .social-icons a {\n  margin: 0 5px;\n}\n\n.support-section .social-icons img {\n  width: 24px;\n  height: 24px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}